## The tcp port dalmatinerfe listens on for the tcp API
##
## Default: 8080
##
## Acceptable values:
##   - an integer
http_port = 8080

## Number of acceptor processes to keep around for tcp connections.
##
## Default: 100
##
## Acceptable values:
##   - an integer
http_listeners = 100

##
## Default: /data/dalmatinerfe/log/query
##
## Acceptable values:
##   - the path to a directory
debug.folder = /data/dalmatinerfe/log/query

##
## Default: 5s
##
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
debug.max_time = 5s

## The path data gets stored into.
##
## Default: off
##
## Acceptable values:
##   - on or off
debug.log_slow = off

## The TCP hostname or IP for the backend server.
## Set this or backend_server.
##
## Default: 127.0.0.1
##
## Acceptable values:
##   - text
ddb_connection.backend_host = {{ ddbfe_db_connection_backend_host }}

## The TCP port for the backend server
## Set this or backend_server.
##
## Default: 5555
##
## Acceptable values:
##   - an integer
ddb_connection.backend_port = 5555

## Maximum number of datapoints to read in 1 chunk
##
## Default: 604800
##
## Acceptable values:
##   - an integer
ddb_connection.max_read = 604800

## maximum pool size
##
## Default: 20
##
## Acceptable values:
##   - an integer
ddb_connection.pool.size = 20

## maximum number of workers created if pool is empty
##
## Default: 5
##
## Acceptable values:
##   - an integer
ddb_connection.pool.max = 5

## The chunk size used to read from the backend.
##
## Default: 100000
##
## Acceptable values:
##   - an integer
dqe.chunk = 100000

## Maximum length for a single query
##
## Default: 1209600
##
## Acceptable values:
##   - an integer
dqe.max_read = 1209600

## DQE Indexing backend like dqe_idx_pg or dqe_idx_ddb
##
## Default: dqe_idx_pg
##
## Acceptable values:
##   - text
idx.backend = dqe_idx_pg

## The TCP hostname or IP for the backend server.
## Set this or backend_server.
##
## Default: 127.0.0.1
##
## Acceptable values:
##   - text
idx.pg.backend_host = {{ ddbfe_idx_pg_backend_host }}

## The TCP port for the backend server
## Set this or backend_server.
##
## Default: 5432
##
## Acceptable values:
##   - an integer
idx.pg.backend_port = 5432

## Initial number of conneciton pool workers
##
## Default: 20
##
## Acceptable values:
##   - an integer
idx.pg.size = 20

## Number of overflow connections - be careful with those!
##
## Default: 0
##
## Acceptable values:
##   - an integer
idx.pg.max_overflow = 0

## Initial number of conneciton pool workers
##
## Default: metric_metadata
##
## Acceptable values:
##   - text
idx.pg.database = metric_metadata

## Username for the conection
##
## Default: ddb
##
## Acceptable values:
##   - text
idx.pg.username = ddb

## Password for the conection
##
## Default: ddb
##
## Acceptable values:
##   - text
idx.pg.password = {{ ddbfe_idx_pg_backend_password }}

## How long a pool worker should wait before timing out
##
## Default: 5s
##
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
idx.pg.timeout = 5s

## where do you want the console.log output:
## off : nowhere
## file: the file specified by log.console.file
## console : standard out
## both : log.console.file and standard out.
##
## Default: dalmatinerfe
##
## Acceptable values:
##   - text
log.service = dalmatinerfe

##
## Default: file
##
## Acceptable values:
##   - one of: off, file, console, both
log.console = file

## the log level of the console log
##
## Default: info
##
## Acceptable values:
##   - one of: debug, info, warning, error
log.console.level = info

## location of the console log
##
## Default: /data/dalmatinerfe/log/console.log
##
## Acceptable values:
##   - the path to a file
log.console.file = /data/dalmatinerfe/log/console.log

## location of the error log
##
## Default: /data/dalmatinerfe/log/error.log
##
## Acceptable values:
##   - the path to a file
log.error.file = /data/dalmatinerfe/log/error.log

## location of the debug log
##
## Default: off
##
## Acceptable values:
##   - the text "off"
##   - the path to a file
## log.debug.file = /data/dalmatinerfe/log/debug.log

## turn on syslog
##
## Default: off
##
## Acceptable values:
##   - one of: on, off
log.syslog = off

## The ip of the graylog server
##
## Default: off
##
## Acceptable values:
##   - an IP/port pair, e.g. 127.0.0.1:10011
##   - the text "off"
## log.graylog.host = 127.0.0.1:12201

## the log level of the graylog log
##
## Default: info
##
## Acceptable values:
##   - one of: debug, info, warning, error
log.graylog.level = info

## The ip of the graylog server
##
## Default: off
##
## Acceptable values:
##   - an IP/port pair, e.g. 127.0.0.1:10011
##   - the text "off"
## log.logstash.host = 127.0.0.1:9125

## the log level of the graylog log
##
## Default: info
##
## Acceptable values:
##   - one of: debug, info, warning, error
log.logstash.level = info

## Whether to write a crash log, and where.
## Commented/omitted/undefined means no crash logger.
##
## Default: /data/dalmatinerfe/log/crash.log
##
## Acceptable values:
##   - text
log.crash.file = /data/dalmatinerfe/log/crash.log

## Maximum size in bytes of events in the crash log - defaults to 65536
##
## Default: 64KB
##
## Acceptable values:
##   - a byte size with units, e.g. 10GB
log.crash.msg_size = 64KB

## Maximum size of the crash log in bytes, before its rotated, set
## to 0 to disable rotation - default is 0
##
## Default: 10MB
##
## Acceptable values:
##   - a byte size with units, e.g. 10GB
log.crash.size = 10MB

## What time to rotate the crash log - default is no time
## rotation. See the lager README for a description of this format:
## https://github.com/basho/lager/blob/master/README.org
##
## Default: $D0
##
## Acceptable values:
##   - text
log.crash.date = $D0

## Number of rotated crash logs to keep, 0 means keep only the
## current one - default is 0
##
## Default: 5
##
## Acceptable values:
##   - an integer
log.crash.count = 5

## Whether to redirect error_logger messages into lager - defaults to true
##
## Default: on
##
## Acceptable values:
##   - one of: on, off
log.error.redirect = on

## maximum number of error_logger messages to handle in a second
## lager 2.0.0 shipped with a limit of 50, which is a little low for riak's startup
##
## Default: 100
##
## Acceptable values:
##   - an integer
log.error.messages_per_second = 100

## How often otters will scan the cache and send batch data
## to zapkin.
##
## Default: 100ms
##
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
otters.batch_interval = 100ms

## the Zapkin URL.
##
## Default: http://127.0.0.1:9411/api/v1/spans
##
## Acceptable values:
##   - text
otters.zapkin_url = http://127.0.0.1:9411/api/v1/spans

## The host otters will declare to send datas from.
##
## Default: 127.0.0.1:0
##
## Acceptable values:
##   - an IP/port pair, e.g. 127.0.0.1:10011
otters.host = 127.0.0.1:0

## Default service name otter reports
##
## Default: dalmatinerfe
##
## Acceptable values:
##   - text
otters.service = dalmatinerfe

## Weather or not to add the default host to logs or not
##
## Default: off
##
## Acceptable values:
##   - on or off
otters.add_service_to_log = off

## Weather or not to add the default host to tags or not
##
## Default: off
##
## Acceptable values:
##   - on or off
otters.add_service_to_tags = off

## Default service logs or tags are tagged with.
##
## Default: lc
##
## Acceptable values:
##   - text
otters.default_key = lc

## Default service logs or tags are tagged with.
##
## Default: v
##
## Acceptable values:
##   - text
otters.default_value = v

## File to read filter rules from
##
## Default: /data/dalmatinerfe/etc/rules.ot
##
## Acceptable values:
##   - the path to a file
## otters.filter = rules.ot

## Name of the Erlang node
##
## Default: dalmatinerfe@127.0.0.1
##
## Acceptable values:
##   - text
nodename = dalmatinerfe@127.0.0.1

## Cookie for distributed node communication.  All nodes in the
## same cluster should use the same cookie or they will not be able to
## communicate.
##
## Default: erlang
##
## Acceptable values:
##   - text
distributed_cookie = erlang

## Sets the number of threads in async thread pool, valid range
## is 0-1024. If thread support is available, the default is 64.
## More information at: http://erlang.org/doc/man/erl.html
##
## Default: 64
##
## Acceptable values:
##   - an integer
erlang.async_threads = 64

## The number of concurrent ports/sockets
## Valid range is 1024-134217727
##
## Default: 65536
##
## Acceptable values:
##   - an integer
erlang.max_ports = 65536
