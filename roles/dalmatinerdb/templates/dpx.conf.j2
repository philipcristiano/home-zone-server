## The path data gets stored into.
##
## Default: /data/dalmatinerpx
##
## Acceptable values:
##   - text
run_user_home = /data/dalmatinerpx

## The bucket where scraped Prometheus data will be stored. This property
## is preceded by the name of the scraper e.g.
## prometheus_scrapers.my_scraper_name.bucket = PromLocal
##
## Default: prom
##
## Acceptable values:
##   - text
## prometheus_scrapers.node_exporter.bucket = prom

## The metrics HTTP endpoint of the target system for scraping.
## This property is preceded by the name of the scraper e.g.
## prometheus_scrapers.my_scraper_name.url = "http://localhost:9090/metrics"
##
## Default: http://localhost:9100/metrics
##
## Acceptable values:
##   - text
## prometheus_scrapers.node_exporter.url = http://localhost:9100/metrics

## Interval of time between scraping requests to the target endpoint.
## This property is prefixed by the name of the scraper e.g.
## prometheus_scrapers.my_scraper_name.frequency = 10s
##
## Default: 10s
##
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
## prometheus_scrapers.node_exporter.frequency = 10s

## The bucket where incomming data will be stored by the listener.
## This property is prefixed by the name of the line protocol used, which can
## be one of 'dp_influx', 'dp_graphite', 'dp_otsdb', 'dp_bsdsyslog',
## 'dp_metrics2' or 'dp_prom_writer' e.g.
## listeners.dp_influx.bucket = InfluxData
##
## Default: InfluxDB
##
## Acceptable values:
##   - text
listeners.dp_influx.bucket = InfluxDB

## The port used for listening.
## This property is prefixed by the name of the line protocol used, which can
## be one of 'dp_influx', 'dp_graphite', 'dp_otsdb', 'dp_bsdsyslog',
## 'dp_metrics2' or 'dp_prom_writer' e.g.
## listeners.dp_influx.port = 8086
##
## Default: 8086
##
## Acceptable values:
##   - an integer
listeners.dp_influx.port = 8086

## The transport used for listening, which may either be 'http', 'tcp' or
## 'udp'.
## This property is prefixed by the name of the line protocol used, which can
## be one of 'dp_influx', 'dp_graphite', 'dp_otsdb', 'dp_bsdsyslog',
## 'dp_metrics2' or 'dp_prom_writer'
## listeners.dp_influx.protocol = http
##
## Default: http
##
## Acceptable values:
##   - text
listeners.dp_influx.protocol = http

## Name of the Erlang node
##
## Default: dalmatinerpx@127.0.0.1
##
## Acceptable values:
##   - text
nodename = dalmatinerpx@127.0.0.1

## Cookie for distributed node communication.  All nodes in the
## same cluster should use the same cookie or they will not be able to
## communicate.
##
## Default: ddb_proxy_cookie
##
## Acceptable values:
##   - text
distributed_cookie = ddb_proxy_cookie

## Sets the number of threads in async thread pool, valid range
## is 0-1024. If thread support is available, the default is 64.
## More information at: http://erlang.org/doc/man/erl.html
##
## Default: 30
##
## Acceptable values:
##   - an integer
erlang.async_threads = 30

## The TCP hostname or IP for the backend server.
## Set this or backend_server.
##
## Default: 127.0.0.1
##
## Acceptable values:
##   - text
idx.pg.backend_host = {{ ddbpx_idx_pg_backend_host }}

## The TCP port for the backend server
## Set this or backend_server.
##
## Default: 5432
##
## Acceptable values:
##   - an integer
idx.pg.backend_port = 5432

## Initial number of conneciton pool workers
##
## Default: 20
##
## Acceptable values:
##   - an integer
idx.pg.size = 20

## Number of overflow connections - be careful with those!
##
## Default: 0
##
## Acceptable values:
##   - an integer
idx.pg.max_overflow = 0

## Initial number of conneciton pool workers
##
## Default: metric_metadata
##
## Acceptable values:
##   - text
idx.pg.database = metric_metadata

## Username for the conection
##
## Default: ddb
##
## Acceptable values:
##   - text
idx.pg.username = ddb

## Password for the conection
##
## Default: ddb
##
## Acceptable values:
##   - text
idx.pg.password = {{ ddbpx_idx_pg_backend_password }}

## How long a pool worker should wait before timing out
##
## Default: 5s
##
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
idx.pg.timeout = 5s

## DQE Indexing backend like dqe_idx_pg or dqe_idx_ddb
##
## Default: dqe_idx_pg
##
## Acceptable values:
##   - text
idx.backend = dqe_idx_pg

## The TCP hostname or IP for the backend server.
## Set this or backend_server.
##
## Default: 127.0.0.1
##
## Acceptable values:
##   - text
ddb_connection.backend_host = {{ ddbpx_db_connection_backend_host }}

## The TCP port for the backend server
## Set this or backend_server.
##
## Default: 5555
##
## Acceptable values:
##   - an integer
ddb_connection.backend_port = 5555

## Maximum number of datapoints to read in 1 chunk
##
## Default: 604800
##
## Acceptable values:
##   - an integer
ddb_connection.max_read = 604800

## maximum pool size
##
## Default: 20
##
## Acceptable values:
##   - an integer
ddb_connection.pool.size = 20

## maximum number of workers created if pool is empty
##
## Default: 5
##
## Acceptable values:
##   - an integer
ddb_connection.pool.max = 5

## where do you want the console.log output:
## off : nowhere
## file: the file specified by log.console.file
## console : standard out
## both : log.console.file and standard out.
##
## Default: file
##
## Acceptable values:
##   - one of: off, file, console, both
log.console = file

## the log level of the console log
##
## Default: info
##
## Acceptable values:
##   - one of: debug, info, warning, error
log.console.level = info

## location of the console log
##
## Default: /data/dalmatinerpx/log/console.log
##
## Acceptable values:
##   - text
log.console.file = /data/dalmatinerpx/log/console.log

## location of the error log
##
## Default: /data/dalmatinerpx/log/error.log
##
## Acceptable values:
##   - text
log.error.file = /data/dalmatinerpx/log/error.log

## location of the debug log
##
## Default: /data/dalmatinerpx/log/debug.log
##
## Acceptable values:
##   - text
log.debug.file = /data/dalmatinerpx/log/debug.log

## turn on syslog
##
## Default: off
##
## Acceptable values:
##   - one of: on, off
log.syslog = off

## Whether to write a crash log, and where.
## Commented/omitted/undefined means no crash logger.
##
## Default: /data/dalmatinerpx/log/crash.log
##
## Acceptable values:
##   - text
log.crash.file = /data/dalmatinerpx/log/crash.log

## Maximum size in bytes of events in the crash log - defaults to 65536
##
## Default: 64KB
##
## Acceptable values:
##   - a byte size with units, e.g. 10GB
log.crash.msg_size = 64KB

## Maximum size of the crash log in bytes, before its rotated, set
## to 0 to disable rotation - default is 0
##
## Default: 10MB
##
## Acceptable values:
##   - a byte size with units, e.g. 10GB
log.crash.size = 10MB

## What time to rotate the crash log - default is no time
## rotation. See the lager README for a description of this format:
## https://github.com/basho/lager/blob/master/README.org
##
## Default: $D0
##
## Acceptable values:
##   - text
log.crash.date = $D0

## Number of rotated crash logs to keep, 0 means keep only the
## current one - default is 0
##
## Default: 5
##
## Acceptable values:
##   - an integer
log.crash.count = 5

## Whether to redirect error_logger messages into lager - defaults to true
##
## Default: on
##
## Acceptable values:
##   - one of: on, off
log.error.redirect = on

## maximum number of error_logger messages to handle in a second
## lager 2.0.0 shipped with a limit of 50, which is a little low for riak's startup
##
## Default: 100
##
## Acceptable values:
##   - an integer
log.error.messages_per_second = 100
